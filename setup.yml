---
- name: Set up Arch Linux system
  hosts: localhost

  vars:
    dotfiles_dir: "{{ lookup('env', 'HOME')}}/.dotfiles"
    pacman_packages:
      cli:
        # Development tools
        - git
        - zsh

        # Utils
        - stow
        - unzip
        - yamllint

  tasks:
    - name: Update pacman cache
      tags: [pacman]
      become: true
      pacman:
        update_cache: true

    - name: Install CLI packages
      tags: [pacman]
      become: true
      pacman:
        name: "{{ pacman_packages.cli }}"
        state: present

    - name: Change default shell to zsh
      tags: [zsh]
      become: true
      user:
        name: "{{ lookup('env', 'USER') }}"
        shell: /usr/bin/zsh
      when: ansible_env.SHELL != "/usr/bin/zsh"

    - name: Stow dotfiles
      tags: [stow]
      ansible.builtin.shell:
        chdir: "{{ dotfiles_dir  }}"
        cmd: "stow --verbose {{ item }}"
      register: stow_out
      changed_when: 'stow_out.stderr is search("LINK: ")'
      with_items:
        - git
        - zsh

    - name: Download and install Nerd Font
      tags: [font]
      vars:
        font_version: "v3.4.0"
        fonts_dir: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
      block:
        - name: Check if fonts are installed
          ansible.builtin.stat:
            path: "{{ fonts_dir }}/JetBrainsMonoNerdFont-Regular.ttf"
          register: font_result

        - name: Create fonts directory
          ansible.builtin.file:
            path: "{{ fonts_dir }}"
            state: directory
          when: not font_result.stat.exists

        - name: Download fonts
          ansible.builtin.unarchive:
            src: "https://github.com/ryanoasis/nerd-fonts/releases/download/{{ font_version }}/JetBrainsMono.zip"
            dest: "{{ fonts_dir }}"
            remote_src: yes
          when: not font_result.stat.exists

        - name: Rebuild font cache
          ansible.builtin.command: fc-cache -fv
          when: not font_result.stat.exists
